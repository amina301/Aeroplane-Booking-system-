#include <iostream>
#include <string>
using namespace std;

const int TOTAL_SEATS = 10;

struct Passenger {
    string name;
    int age;
    string passport;
};

Passenger seats[TOTAL_SEATS];
bool isBooked[TOTAL_SEATS] = {false};

// Function to book a seat
void bookSeat() {
    int seatNumber;
    cout << "\nEnter seat number to book (1-" << TOTAL_SEATS << "): ";
    cin >> seatNumber;

    if (seatNumber < 1 || seatNumber > TOTAL_SEATS) {
        cout << "❌ Invalid seat number.\n";
        return;
    }

    if (isBooked[seatNumber - 1]) {
        cout << "❌ Seat already booked.\n";
        return;
    }

    Passenger p;
    cin.ignore(); // clear input buffer
    cout << "Enter passenger name: ";
    getline(cin, p.name);
    cout << "Enter passenger age: ";
    cin >> p.age;
    cout << "Enter passport number: ";
    cin >> p.passport;

    seats[seatNumber - 1] = p;
    isBooked[seatNumber - 1] = true;

    cout << "✅ Seat " << seatNumber << " booked successfully!\n";
}

// Function to display all bookings
void viewBookings() {
    cout << "\n--- Booked Seats ---\n";
    bool found = false;

    for (int i = 0; i < TOTAL_SEATS; i++) {
        if (isBooked[i]) {
            cout << "Seat " << i + 1 << ": "
                 << seats[i].name << ", Age: " << seats[i].age
                 << ", Passport: " << seats[i].passport << "\n";
            found = true;
        }
    }

    if (!found) {
        cout << "No bookings yet.\n";
    }
}

// Main menu
int main() {
    int choice;

    do {
        cout << "\n========== Aeroplane Booking System ==========\n";
        cout << "1. Book a Seat\n";
        cout << "2. View Bookings\n";
        cout << "3. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1: bookSeat(); break;
            case 2: viewBookings(); break;
            case 3: cout << "✈️ Exiting the system. Thank you!\n"; break;
            default: cout << "❌ Invalid choice. Try again.\n";
        }

    } while (choice != 3);

    return 0;
}
